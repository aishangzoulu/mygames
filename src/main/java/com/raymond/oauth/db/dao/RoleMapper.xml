<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.raymond.oauth.db.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.raymond.oauth.db.model.Role">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_sign" jdbcType="VARCHAR" property="roleSign" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="role_level" jdbcType="INTEGER" property="roleLevel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
         <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role_name, role_sign, description, role_level
  </sql>
  <select id="selectByExample" parameterType="com.raymond.oauth.db.model.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.raymond.oauth.db.model.RoleExample">
    delete from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.raymond.oauth.db.model.Role">
    insert into sys_role (id, role_name, role_sign, 
      description, role_level)
    values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleSign,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{roleLevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.raymond.oauth.db.model.Role">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleSign != null">
        role_sign,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="roleLevel != null">
        role_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleSign != null">
        #{roleSign,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="roleLevel != null">
        #{roleLevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.raymond.oauth.db.model.RoleExample" resultType="java.lang.Integer">
    select count(*) from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleSign != null">
        role_sign = #{record.roleSign,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.roleLevel != null">
        role_level = #{record.roleLevel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_role
    set id = #{record.id,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      role_sign = #{record.roleSign,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      role_level = #{record.roleLevel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.raymond.oauth.db.model.Role">
    update sys_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleSign != null">
        role_sign = #{roleSign,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="roleLevel != null">
        role_level = #{roleLevel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.raymond.oauth.db.model.Role">
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_sign = #{roleSign,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      role_level = #{roleLevel,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
   <!-- 通过用户id 查询用户 拥有的角色 -->
    <select id="selectRolesByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT r.* FROM sys_role r LEFT JOIN sys_user_role ur ON r.id = ur.role_id
        WHERE ur.user_id = #{id,jdbcType=BIGINT}
    </select>
    
    <select id="selectCheckedByUserId" parameterType="java.lang.Long" resultMap="UserResultMap">
    	 <![CDATA[
        
        SELECT r.* , CASE WHEN r.id IN ( SELECT ur.role_id FROM sys_user_role ur WHERE ur.user_id = #{id,jdbcType=BIGINT} ) THEN TRUE ELSE FALSE END checked
		FROM sys_role r where r.role_level >= #{level,jdbcType=INTEGER}
		
		]]>
    </select>
    
     <resultMap id="UserResultMap" type="com.raymond.oauth.db.model.Role">
	    <id column="id" jdbcType="BIGINT" property="id" />
	    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
	    <result column="role_sign" jdbcType="VARCHAR" property="roleSign" />
	    <result column="role_level" jdbcType="INTEGER" property="roleLevel" />
	    <result column="description" jdbcType="VARCHAR" property="description" />
	    <result column="checked" jdbcType="BOOLEAN" property="checked" />
	  </resultMap>
  
</mapper>